<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        kf6d7PMAAAAASUVORK5CYII=
</value>
  </data>
</root>